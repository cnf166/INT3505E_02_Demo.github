openapi: 3.0.0
info:
  title: Library Management API
  description: API để quản lý thư viện sách - DEMO
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /books:
    get:
      summary: Get all books
      description: Lấy danh sách tất cả các sách
      operationId: getBooks
      tags:
        - Books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
    
    post:
      summary: Create a new book
      description: Tạo một cuốn sách mới
      operationId: createBook
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  book:
                    $ref: '#/components/schemas/Book'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /book/{id}:
    get:
      summary: Get a book by id
      description: Lấy thông tin sách theo ID
      operationId: getBookById
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  book:
                    $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      summary: Update a book
      description: Cập nhật thông tin sách
      operationId: updateBook
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdate'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  book:
                    $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Delete a book
      description: Xóa sách theo ID
      operationId: deleteBook
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          schema:
            type: integer
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  book_deleted:
                    $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /books/search:
    get:
      summary: Search books by title or author with pagination
      description: Tìm kiếm sách theo tiêu đề hoặc tác giả với phân trang
      operationId: searchBooks
      tags:
        - Books
      parameters:
        - name: q
          in: query
          description: Search query for title or author
          required: false
          schema:
            type: string
            default: ''
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: per_page
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookSearchResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          description: Book ID
          example: 1
        title:
          type: string
          description: Book title
          example: "1984"
        author:
          type: string
          description: Book author
          example: "George Orwell"
        date_joined:
          type: string
          format: date-time
          description: Date when book was added
          example: "2024-01-15T10:30:00Z"
    
    BookCreate:
      type: object
      required:
        - title
        - author
      properties:
        title:
          type: string
          description: Book title
          example: "The Hobbit"
          minLength: 1
          maxLength: 80
        author:
          type: string
          description: Book author
          example: "J.R.R. Tolkien"
          minLength: 1
          maxLength: 40
    
    BookUpdate:
      type: object
      properties:
        title:
          type: string
          description: Book title
          example: "The Hobbit - Updated"
          minLength: 1
          maxLength: 80
        author:
          type: string
          description: Book author
          example: "J.R.R. Tolkien"
          minLength: 1
          maxLength: 40
    
    BookSearchResponse:
      type: object
      properties:
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
        total:
          type: integer
          description: Total number of books matching the search
          example: 25
        pages:
          type: integer
          description: Total number of pages
          example: 3
        current_page:
          type: integer
          description: Current page number
          example: 1
    
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "Book not found"